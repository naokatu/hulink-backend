version: 'Compose-Spec'

volumes:
  postgres_data:
    driver: 'local'
  app_node_modules:
    driver: 'local'

x-app-base: &app-base
  depends_on:
    postgres:
      condition: service_healthy
  build:
    context: ./
    dockerfile: ./Dockerfile
    target: artifact
  volumes:
    - ./:/app
    - app_node_modules:/app/node_modules
  command: yarn run start:dev

services:
  app:
    <<: *app-base
    profiles:
      - full
    ports:
      - '13000:3000'
    environment:
      APP_ENV: local
      DATABASE_URL: 'postgresql://postgres:admin@postgres:5432/hulink-app?schema=public'
      AUTH_ENABLED: false
      LOG_LEVEL: debug
      LOG_PRETTY_PRINT: true

  test:
    <<: *app-base
    profiles:
      - test
    environment:
      APP_ENV: local
      DATABASE_URL: 'postgresql://postgres:admin@postgres:5432/hulink-test?schema=public'
      AUTH_ENABLED: false
      LOG_LEVEL: debug
      LOG_PRETTY_PRINT: false

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_USER: 'postgres'
      POSTGRES_MULTIPLE_DATABASES: '"hulink-app","hulink-test"'
    ports:
      - '15432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: '5s'
      timeout: '5s'
      retries: 10
      start_period: '10s'
